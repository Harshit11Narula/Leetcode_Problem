class Solution {
public:
    int maxStudents(vector<vector<char>>& arr) {
       int n = arr.size();
        int m = arr[0].size();
        vector<int> a;
        for(int j=0;j<n;j++){
            int cur = 0;
            for(int i=0;i<m;i++){
                cur*=2;
                if(arr[j].at(i)=='.') cur++;
            }
            a.push_back(cur);
        }
        vector<vector<int>> dp(n+1 , vector<int>((1<<m) , -1));
        dp[0][0] =0;
        int ans = 0;
        for(int i=1;i<=n;i++){
            int num = a[i-1];
            for(int j=0;j<(1<<m);j++){
                //cout<<j<<" ";
                if((j & num)==j && (j & (j>>1))==0){
                    
                    for(int k=0;k<(1<<m);k++){
                      //  cout<<k<<" ";
                       if((j&(k>>1))==0 && ((j>>1)&k)==0 && dp[i-1][k]!=-1){
                            
                           dp[i][j] = max(dp[i][j], dp[i-1][k] + __builtin_popcount(j));
                       }
                    }
                   
                    ans = max(ans , dp[i][j]);
                }
                
     
            }   
        }        
        return ans;
        
        
        
    }
};
