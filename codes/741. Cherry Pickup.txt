class Solution {
public:
    int cherryPickup(vector<vector<int>>& arr) {
        int n = arr.size();
        int m = (n << 1) - 1;
        int dp[n][n]={0};
        for(int j=0;j<n;j++) for(int i=0;i<n;i++) dp[j][i] = 0;
        dp[0][0] = arr[0][0];
        for(int i = 1; i < m ; i++){
            
            for(int j = n-1; j>=0; j--){
                
                for(int k = n-1; k>=0; k--){
                    
                    int q1 = i - j , q2 = i - k;
                    if(q1<0 || q1>=n || q2<0 || q2>=n || arr[j][q1] < 0 || arr[k][q2] < 0){
                        dp[j][k] = -1;
                        continue;
                    }
                    
                    if( j > 0 ) dp[j][k] = max(dp[j][k] ,   dp[j-1][k]);
                    if(k > 0) dp[j][k] = max(dp[j][k] , dp[j][k-1]);
                    if(j>0 && k>0) dp[j][k] = max(dp[j][k] , dp[j-1][k-1]);
                    
                    if(dp[j][k] >=0 ) dp[j][k] += arr[j][q1] + (j!=k ? arr[k][q2] : 0);
                }
            
            }
            
        }
        return max(dp[n-1][n-1], 0);
        
        
    }
};
