
bool cmp(pair<int , pair<int, int> >& x  , pair<int , pair<int, int> >& y){
    if(x.first==y.first) return x.second.first < y.second.first;
    return x.first < y.first;
}
class Solution {
public:
    int jobScheduling(vector<int>& s, vector<int>& e, vector<int>& p) {
        map<int , int> dp;
        vector<pair<int , pair<int, int> > > arr;
        for(int j=0;j<s.size();j++){
            arr.push_back({s[j] , {e[j] , p[j]}});
            arr.push_back({e[j] , {-1 , p[j]}});
        }
        sort(arr.begin() , arr.end() , cmp);
        int val= 0;
        int ans= 0;
        for(int j=0;j<arr.size();j++){
            int st = arr[j].first;
            int end = arr[j].second.first;
            int profit = arr[j].second.second;
            if(end==-1){
                val = max(val, dp[st]);
               // cout<<val<<"\n";
            }else{
                dp[end] = max(dp[end] ,val + profit);
               // cout<<end<<" "<<dp[end]<<"\n";
                ans = max(ans , dp[end]);
            }
            ans = max(ans , val);
        }
       return ans;
    }
};
