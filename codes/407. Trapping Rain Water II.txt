class Solution {
public:
    int trapRainWater(vector<vector<int>>& arr) {
        int ans = 0;
        int n = arr.size();
        int m = arr[0].size();
        int maxval = 0;
        vector<vector<int>> used(n , vector<int>(m , 0));
        priority_queue<pair<int , pair<int , int>> , vector<pair<int , pair<int , int>>> , greater<pair<int , pair<int , int>>>> pq;
        for(int j=0;j<m;j++){
            pq.push({arr[0][j] , {0,j}});
            used[0][j] = 1;
            pq.push({arr[n-1][j] , {n-1,j}});
            used[n-1][j] = 1;
        }
        for(int  j=1;j<n-1;j++){
            pq.push({arr[j][0] , {j,0}});
            used[j][0] = 1;
            pq.push({arr[j][m-1] , {j,m-1}});
            used[j][m-1] = 1;
        }
        while(!pq.empty()){
            
            pair<int , pair<int , int>> qw = pq.top();
            int x = qw.second.first;
            int y = qw.second.second;
            int val = qw.first;
            maxval = max(maxval , val);
            
            pq.pop();
            if(x-1>=0 && used[x-1][y]==0){
                if(arr[x-1][y] < maxval){
                    ans+= maxval- arr[x-1][y];
                }
                pq.push({arr[x-1][y] , {x-1 , y}});
                used[x-1][y] =  1;
            }
            if(x+1<n && used[x+1][y]==0){
                if(arr[x+1][y] < maxval){
                    ans+= maxval- arr[x+1][y];
                }
                pq.push({arr[x+1][y] , {x+1 , y}});
                used[x+1][y] =  1;
            }
            if(y-1>=0 && used[x][y-1]==0){
                if(arr[x][y-1] < maxval){
                    ans+= maxval- arr[x][y-1];
                }
                pq.push({arr[x][y-1] , {x , y-1}});
                used[x][y-1] =  1;
            }
           if(y+1<m && used[x][y+1]==0){
                if(arr[x][y+1] < maxval){
                    ans+= maxval- arr[x][y+1];
                }
                pq.push({arr[x][y+1] , {x , y+1}});
                used[x][y+1] =  1;
            }
           
        }
        return ans;
        
        
        
        
        
        
    }
};
