class Solution {
public:
    int maxProfit(int k, vector<int>& arr) {
        int n = arr.size();
        if(n<=1) return 0;
         
        if(k>=n/2){
            int ans = 0;
            for(int j=1;j<n;j++)
                if(arr[j]>arr[j-1])
                    ans += arr[j] - arr[j-1];
            return ans;
        }
        vector<vector<int> > dp(k+1 , vector<int>(n , 0));
        
        
        
        
        for(int i=1;i<=k;i++){
            int temp = dp[i-1][0] - arr[0];
            for(int j=1;j<n;j++){
                dp[i][j] = max(dp[i][j-1] , arr[j] + temp);
                temp = max(temp , dp[i-1][j] - arr[j]);
            }
        }
      return  dp[k][n-1];
    }
};
