class Solution {
public:
    int mincostTickets(vector<int>& days, vector<int>& costs) {
        int dp[366] ;
    
        int q = 0;
        dp[0] = 0;
        for(int j=1;j<366;j++){
            dp[j] = INT_MAX;
           
            if(q>=days.size() || j!=days[q]) {
                dp[j] = dp[j-1];
                continue;
            }
          //   cout<<days[q]<<", ";
            if(j-1>=0) {
                dp[j] = min(dp[j] , dp[j-1] + costs[0]);
            }else 
                dp[j] = min(dp[j] , costs[0]);
            
            if(j-7>=0) {
                dp[j] = min(dp[j] , dp[j-7] + costs[1]);}
            else
                dp[j] = min(dp[j] , costs[1]);
            
            if(j-30>=0) {dp[j] = min(dp[j] , dp[j-30] + costs[2]);}
                else
                    dp[j] = min(dp[j] , costs[2]);
                         
            q++;
           cout<<dp[j]<<" ";
        }
        
        return dp[days[days.size()-1]];
        
    }
};
